@page "/restaurants/create/"
@inject HttpClient _client
@inject NavigationManager _navManager


<h3 class="card-title">Create New Restaurant</h3>
<hr/>
<br/>

<EditForm Model="@restaurant" OnValidSubmit="CreateRestaurant">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Name:</label>
        <div>
            <InputText @bind-Value ="@restaurant.Name" class="form-control"/>
            <ValidationMessage For ="@(()=> restaurant.Name)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Address:</label>
        <div>
            <InputText @bind-Value="@restaurant.Address" class="form-control" />
            <ValidationMessage For="@(()=> restaurant.Address)" />
        </div>
    </div>


    <div class="form-group">
        <label>Location</label>
        <div>
            <InputSelect @bind-Value="restaurant.LocationFilterId" class="form-control">
                <option value=" ">--select location--</option>
                @if (LocationFilters != null)
                {
                    foreach(var locationfilter in LocationFilters)
                    {
                        <option value="@locationfilter.Id">@locationfilter.PostalCode</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(()=> restaurant.LocationFilterId)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Contact:</label>
        <div>
            <InputNumber @bind-Value="@restaurant.Contact" class="form-control" />
            <ValidationMessage For="@(()=> restaurant.Contact)" />
        </div>
    </div>
    <div class="form-group">
        <label>Price</label>
        <div>
            <InputSelect @bind-Value="restaurant.PriceFilterId" class="form-control">
                <option value=" ">--select price--</option>
                @if (PriceFilters != null)
                {
                    foreach(var pricefilter in PriceFilters)
                    {
                        <option value="@pricefilter.Id">@pricefilter.PriceRange</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(()=> restaurant.PriceFilterId)"/>
        </div>
    </div>
    <div class="form-group">
        <label>Serve</label>
        <div>
            <InputSelect @bind-Value="restaurant.ServeFilterId" class="form-control">
                <option value=" ">--select serve--</option>
                @if (ServeFilters != null)
                {
                    foreach(var servefilter in ServeFilters)
                    {
                        <option value="@servefilter.Id">@servefilter.ServeRange</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(()=> restaurant.ServeFilterId)"/>
        </div>
    </div>
    <button type="submit" class="btn btn-success btn-block">
        Create Restaurant
    </button>
</EditForm>

@code {
    Restaurant restaurant = new Restaurant();

    private IList<LocationFilter>? LocationFilters;
    private IList<ServeFilter>? ServeFilters;
    private IList<PriceFilter>? PriceFilters;

    protected async override Task OnInitializedAsync()
    {
        LocationFilters = await _client.GetFromJsonAsync<List<LocationFilter>>($"{Endpoints.LocationFiltersEndpoint}");
        ServeFilters = await _client.GetFromJsonAsync<List<ServeFilter>>($"{Endpoints.ServeFiltersEndpoint}");
        PriceFilters = await _client.GetFromJsonAsync<List<PriceFilter>>($"{Endpoints.PriceFiltersEndpoint}");
    }

    private async Task CreateRestaurant()
    {
        await _client.PostAsJsonAsync(Endpoints.RestaurantsEndpoint, restaurant);
        _navManager.NavigateTo("/restaurants/");
    }
}
